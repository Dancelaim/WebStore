@model WowCarry.Domain.Entities.ProductOptionDetails

@using (Html.BeginCollectionItem("ProductOptionCollection"))
{
    <div class="opt-body @Model.OptionName.ToString().Replace(' ', '_').Replace("(", "_").Replace(")", "_")">
        @Html.HiddenFor(x => Model.OptionId, new { @class = "hiddenOptId" })
        <label>Option Name</label>
        @Html.EditorFor(x => Model.OptionName, new { @class = "form-control" })
        <label>Option Type</label>
        @Html.EditorFor(x => Model.OptionType, new { @class = "form-control" })
        <div class="ddParent">
            <label>Option Parent</label>
            @Html.DropDownListFor(m => Model.OptionParent, Enumerable.Empty<SelectListItem>())
            @Html.HiddenFor(x => Model.OptionParent)
        </div>
        <div class="param-list">
            <div class="param-titles">
                <div>Name</div>
                <div>Tooltip</div>
                <div>Price</div>
                <div>Sale</div>
                <div class="parent-title">Parent</div>
            </div>
            @if (Model.ParamCollection != null)
            {
                foreach (var param in Model.ParamCollection)
                {
                    Html.RenderPartial("ProductOptionParameter", param);
                }
            }
        </div>
        <div class="add-param-block">
            <label>Add Parameter</label>
            @Html.HiddenFor(x => Model.OptionName)
            @Html.DropDownList("Parameter Parent", Model.ParamList, Model.ParamList?.SelectedValue != null ? Model.ParamList.SelectedValue.ToString() : "Empty")
            <div class="param-add btn">Add</div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        var htmlString = "<div class=\"opt-head\"id=\"@Model.OptionName.ToString().Replace(' ', '_').Replace("(", "_").Replace(")", "_")\">@Model.OptionName<span class=\"remove - option\"></span></div>"
        $('.titles-options').append(htmlString)
    });
</script>
