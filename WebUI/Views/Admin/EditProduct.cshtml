@model WowCarry.Domain.Entities.ProductDetails

<div class="panel">
    <div class="panel-heading">
        <h3>Edit for «@Model.ProductName»</h3>
    </div>

 @using (Html.BeginForm())
 {
<div class="panel-body">
     <div class="tabs">
        <div id="tab1" class="tab-title active-title">Product Info</div>
        <div id="tab2" class="tab-title">Descriptions</div>
        <div id="tab3" class="tab-title">Options</div>
     </div>
    @Html.HiddenFor(m => m.ProductId)
<div class="tabs-desc">
    <div class="tab1 active-tab">
        @foreach (var property in ViewData.ModelMetadata.Properties.Where(p => !p.PropertyName.ToLower().Contains("description") & !p.PropertyName.ToLower().Contains("option")))
        {
            if (property.PropertyName != "ProductId" && property.PropertyName != "GamesList" && property.PropertyName != "CategoriesList")
            {
                <div class="input-block">
                    <label>@(property.DisplayName ?? property.PropertyName):</label>
                    @if (property.PropertyName.Contains("ProductGameName"))
                    {
                        @Html.DropDownList("Game Name", Model.GamesList)
                    }
                    else if (property.PropertyName.Contains("ProductCategoryName"))
                    {
                        @Html.DropDownList("Category Name", Model.CategoriesList)
                    }
                    else
                    {
                        @Html.Editor(property.PropertyName, new { @class = "form-control", rows = 5 })
                    }
                </div>
            }
        }
    </div>
    <div class="tab2">
        @foreach (var property in ViewData.ModelMetadata.Properties.Where(p => p.PropertyName.ToLower().Contains("description")))
        {
        <div class="description-block">
            <label>@(property.DisplayName ?? property.PropertyName):</label>
                @if (!property.PropertyName.Contains("Title"))
                {
                    @Html.TextArea(property.PropertyName, null, new { @class = "textarea-desc", rows = 3 })
                }
                else
                {
                    @Html.Editor(property.PropertyName, new { @class = "form-control", rows = 5 })
                }
        </div>
        }
    </div>
    <div class="tab3">
        @foreach (var property in ViewData.ModelMetadata.Properties.Where(p => p.PropertyName.ToLower().Contains("option")))
        {
            <label>@(property.DisplayName ?? property.PropertyName):</label>
            @Html.DropDownList("Category Name", Model.OptionsList)
            <div id="OptionBlock">

            </div>
        }
    </div>
</div>
</div>
    <div class="panel-footer">
        <input type="submit" value="Сохранить" class="btn" />
        @Html.ActionLink("Undo and Exit", "Admin", null, new
        {
            @class = "btn btn-default"
        })
    </div>
    }
</div>

<script>
    $(document).ready(function () {
        $(".tab-title").on("click", function () {
            var TabName = $(this).attr("id");


            switch (TabName) {
                case "tab1":
                    $(".tab2, .tab3").removeClass("active-tab");
                    $("#tab2, #tab3").removeClass("active-title");
                    $(".tab1").addClass("active-tab");
                    $("#tab1").addClass("active-title");
                    break;
                case "tab2":
                    $(".tab1, .tab3").removeClass("active-tab");
                    $("#tab1, #tab3").removeClass("active-title");
                    $(".tab2").addClass("active-tab");
                    $("#tab2").addClass("active-title");
                    break;
                case "tab3":
                    $(".tab2, .tab1").removeClass("active-tab");
                    $("#tab2, #tab1").removeClass("active-title");
                    $(".tab3").addClass("active-tab");
                    $("#tab3").addClass("active-title");
                    break;
            }
        })
    });
    $(document).ready(function () {
        $("#Category_Name").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("OptionsList")',
                dataType: 'json',
                data: {
                    optionName: $("#Category_Name").val(),
                    prodId: $("#ProductId").val()
                        },
                success: function (data) {
                    $("#OptionBlock").html(data);
                },
                error: function (ex) {
                    alert('Failed to retrieve options.' + ex);
                }
            });
            return false;
        })
    });
</script>